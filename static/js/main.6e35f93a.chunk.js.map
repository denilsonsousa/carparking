{"version":3,"sources":["components/navbar.component.js","components/park-list.component.js","components/edit-park.component.js","components/create-park.component.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","react_router_dom","to","Component","Park","props","park","parkname","parkinglots","parkinglotsavailable","_id","href","onClick","deletePark","ParksList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","state","parks","_this2","axios","get","then","response","setState","data","catch","error","console","log","id","delete","res","filter","el","_this3","map","currentpark","park_list_component_Park","key","parksList","EditParks","onChangeParkname","onChangeParkinglots","onChangeParkinglotsavailable","onSubmit","match","params","e","target","value","preventDefault","post","window","location","type","required","onChange","pattern","maxLength","CreateParks","App","navbar_component_Navbar","react_router","path","exact","component","Boolean","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e35f93a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component {\r\n    \r\n    render(){\r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg\">\r\n                <Link to=\"/\" className=\"navbar-brand\">MICRO II - Projeto Denilson e Charles</Link>\r\n                <div className=\"collapse navbar-collapse\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/\" className=\"nav-link\">Estacionamentos</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                            <Link to=\"/create\" className=\"nav-link\">Criar estacionameto</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Park = props => (\r\n    <tr>\r\n        <td>{props.park.parkname}</td>\r\n        <td>{props.park.parkinglots}</td>\r\n        <td>{props.park.parkinglotsavailable}</td>\r\n        <td>\r\n            <Link to={\"/edit/\" + props.park._id}>editar</Link> | <a href=\"#\" onClick={() => { props.deletePark(props.park._id)}}>apagar</a>\r\n        </td>\r\n    </tr>\r\n)\r\n\r\nexport default class ParksList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.deletePark = this.deletePark.bind(this);\r\n\r\n        this.state = {parks: []};\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://https-carparking.apps.us-east-2.starter.openshift-online.com/parks/')\r\n            .then(response => {\r\n                this.setState({parks: response.data})\r\n            })    \r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    deletePark(id) {\r\n        axios.delete('https://https-carparking.apps.us-east-2.starter.openshift-online.com/parks/'+id)\r\n            .then(res => console.log(res.data));\r\n\r\n        this.setState({\r\n            parks: this.state.parks.filter(el => el._id !== id)\r\n        });\r\n    }\r\n\r\n    parksList(){\r\n        return this.state.parks.map(currentpark => {\r\n            return <Park park={currentpark} deletePark={this.deletePark} key={currentpark._id}/>;\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Estacionamentos registrados</h3>\r\n                <table className=\"table\">\r\n                    <thead className=\"tread-light\">\r\n                        <tr>\r\n                            <th>Estacionamento</th>\r\n                            <th>Total de vagas</th>\r\n                            <th>Vagas disponíveis</th>\r\n                            <th>Ações</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.parksList()}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class EditParks extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeParkname = this.onChangeParkname.bind(this);\r\n        this.onChangeParkinglots = this.onChangeParkinglots.bind(this);\r\n        this.onChangeParkinglotsavailable = this.onChangeParkinglotsavailable.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n\r\n        this.state = {\r\n            parkname: '',\r\n            parkinglots:0,\r\n            parkinglotsavailable: 0\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('https://https-carparking.apps.us-east-2.starter.openshift-online.com/parks/'+this.props.match.params.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    parkname: response.data.parkname,\r\n                    parkinglots: response.data.parkinglots,\r\n                    parkinglotsavailable: response.data.parkinglotsavailable\r\n                })\r\n            })\r\n            .catch(function (error){\r\n                console.log(error);\r\n            })\r\n    }\r\n\r\n    onChangeParkname(e){\r\n        this.setState({\r\n            parkname: e.target.value\r\n        });\r\n    }\r\n    onChangeParkinglots(e){\r\n        this.setState({\r\n            parkinglots: e.target.value\r\n        });\r\n    }\r\n    onChangeParkinglotsavailable(e){\r\n        this.setState({\r\n            parkinglotsavailable: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        const park = {\r\n            parkname: this.state.parkname,\r\n            parkinglots: this.state.parkinglots,\r\n            parkinglotsavailable: this.state.parkinglotsavailable\r\n        }\r\n        if(park.parkinglots <= park.parkinglotsavailable){\r\n            park.parkinglotsavailable = park.parkinglots;\r\n        }\r\n        \r\n        axios.post('https://https-carparking.apps.us-east-2.starter.openshift-online.com/parks/update/'+this.props.match.params.id,park)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                window.location = '/';\r\n            });\r\n        \r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Editar estacionamento</h3> \r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Estacionamento: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.parkname}\r\n                            onChange={this.onChangeParkname}\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Total de Vagas: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            pattern=\"[0-9]*\"\r\n                            maxLength=\"4\"\r\n                            value={this.state.parkinglots}\r\n                            onChange={this.onChangeParkinglots}\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Vagas disponíveis: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            pattern=\"[0-9]*\"\r\n                            maxLength=\"4\"\r\n                            value={this.state.parkinglotsavailable}\r\n                            onChange={this.onChangeParkinglotsavailable}\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Salvar\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class CreateParks extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.onChangeParkname = this.onChangeParkname.bind(this);\r\n        this.onChangeParkinglots = this.onChangeParkinglots.bind(this);\r\n        this.onChangeParkinglotsavailable = this.onChangeParkinglotsavailable.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n\r\n        this.state = {\r\n            parkname: '',\r\n            parkinglots:0,\r\n            parkinglotsavailable: 0\r\n        }\r\n    }\r\n\r\n\r\n    onChangeParkname(e){\r\n        this.setState({\r\n            parkname: e.target.value\r\n        });\r\n    }\r\n    onChangeParkinglots(e){\r\n        this.setState({\r\n            parkinglots: e.target.value\r\n        });\r\n    }\r\n    onChangeParkinglotsavailable(e){\r\n        this.setState({\r\n            parkinglotsavailable: e.target.value\r\n        });\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        const park = {\r\n            parkname: this.state.parkname,\r\n            parkinglots: this.state.parkinglots,\r\n            parkinglotsavailable: this.state.parkinglotsavailable\r\n        }\r\n\r\n        console.log(park);\r\n        \r\n        axios.post('https://https-carparking.apps.us-east-2.starter.openshift-online.com/parks/add',park)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                window.location = '/';\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>Criar novo estacionamento</h3> \r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label>Estacionamento: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            value={this.state.parkname}\r\n                            onChange={this.onChangeParkname}\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Total de Vagas: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            pattern=\"[0-9]*\"\r\n                            maxLength=\"4\"\r\n                            value={this.state.parkinglots}\r\n                            onChange={this.onChangeParkinglots}\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Vagas disponíveis: </label>\r\n                        <input type=\"text\"\r\n                            required\r\n                            className=\"form-control\"\r\n                            pattern=\"[0-9]*\"\r\n                            maxLength=\"4\"\r\n                            value={this.state.parkinglotsavailable}\r\n                            onChange={this.onChangeParkinglotsavailable}\r\n                            />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"submit\" value=\"Salvar\" className=\"btn btn-primary\" />\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\"\n\nimport Navbar from \"./components/navbar.component\";\nimport ParksList from './components/park-list.component';\nimport EditParks from './components/edit-park.component';\nimport CreateParks from './components/create-park.component';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <br/>\n      <Route path=\"/\" exact component = {ParksList} />\n      <Route path=\"/edit/:id\" exact component = {EditParks} />\n      <Route path=\"/create\" exact component = {CreateParks} />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}